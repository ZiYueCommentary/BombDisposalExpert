plugins {
	id "architectury-plugin" version "3.4-SNAPSHOT"
	id "dev.architectury.loom" version "0.10.0-SNAPSHOT" apply false
	id "de.undercouch.download" version "4.1.2"
	id "com.github.johnrengelman.shadow" version "7.1.0"
}

def default_minecraft_version = "1.16.5"
def minecraft_version = project.properties.containsKey("buildVersion") ? project.getProperties().get("buildVersion") : default_minecraft_version
def is_1_16 = (minecraft_version as String).startsWith("1.16")
def is_1_17 = (minecraft_version as String).startsWith("1.17")

rootProject.ext.architectury_version = is_1_16 ? rootProject.architectury_version_1_16 : is_1_17 ? rootProject.architectury_version_1_17 : rootProject.architectury_version_1_18
rootProject.ext.architectury_id = is_1_16 ? "me.shedaniel" : "dev.architectury"
rootProject.ext.fabric_api_version = is_1_16 ? rootProject.fabric_version_1_16 : is_1_17 ? rootProject.fabric_version_1_17 : rootProject.fabric_version_1_18
rootProject.ext.forge_version = is_1_16 ? rootProject.forge_version_1_16 : is_1_17 ? rootProject.forge_version_1_17 : rootProject.forge_version_1_18

architectury {
	minecraft = minecraft_version
}

subprojects {
	apply plugin: "dev.architectury.loom"

	loom {
		silentMojangMappingsLicense()
	}

	dependencies {
		minecraft "com.mojang:minecraft:${minecraft_version}"
		mappings loom.officialMojangMappings()
	}
}

task setupFiles() {}

allprojects {
	apply plugin: "architectury-plugin"

	version = minecraft_version + "-" + project.mod_version
	group = project.maven_group

	tasks.withType(JavaCompile) {
		options.encoding = "UTF-8"

		if (is_1_16) {
			def targetVersion = 8
			if (JavaVersion.current().isJava9Compatible()) {
				options.release = targetVersion
			}
		} else if (is_1_17) {
			options.release = 16
		} else {
			options.release = 17
		}
	}

	afterEvaluate {
		for (def task in it.tasks) {
			if (task != rootProject.tasks.setupFiles) {
				task.dependsOn rootProject.tasks.setupFiles
			}
		}
	}
}